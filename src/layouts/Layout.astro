---
import { Toaster } from "@/components/ui/sonner";
import "../styles/global.css";
import "sonner/dist/styles.css";

const { title } = Astro.props;

export const getPageTitle = (title = "", companyName = "Carrasco Tropical") => {
	if (!title) return companyName;
	if (!companyName || title === companyName) return title;
	return `${title} - ${companyName}`;
};
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{getPageTitle(title)}</title>
	</head>
	<body>
		<slot />
		<Toaster position="top-center" client:load />
	</body>
</html>

<script is:inline>
	const getThemePreference = () => {
		if (
			typeof localStorage !== "undefined" &&
			localStorage.getItem("theme")
		) {
			return localStorage.getItem("theme");
		}
		return window.matchMedia("(prefers-color-scheme: dark)").matches
			? "dark"
			: "light";
	};
	const isDark = getThemePreference() === "dark";
	document.documentElement.classList[isDark ? "add" : "remove"]("dark");

	if (typeof localStorage !== "undefined") {
		const observer = new MutationObserver(() => {
			const isDark = document.documentElement.classList.contains("dark");
			localStorage.setItem("theme", isDark ? "dark" : "light");
		});
		observer.observe(document.documentElement, {
			attributes: true,
			attributeFilter: ["class"],
		});
	}
</script>
<style>
	html,
	body {
		margin: 0;
		width: 100%;
		height: 100%;
	}
</style>
